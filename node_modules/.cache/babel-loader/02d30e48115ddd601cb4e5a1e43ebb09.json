{"ast":null,"code":"import axios from \"axios\";\nimport { TodosActionTypes } from \"../types/todo\";\nexport const fetchTodos = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: TodosActionTypes.FETCH_TODOS\n      });\n      const response = await axios.get('https://jsonplaceholder.typicode.com/todos');\n      setTimeout(() => {\n        dispatch({\n          type: TodosActionTypes.FETCH_TODOS_SUCCESS,\n          payload: response.data\n        });\n      }, 500);\n      dispatch({\n        type: TodosActionTypes.FETCH_TODOS_SUCCESS,\n        payload: response.data\n      });\n    } catch (e) {\n      dispatch({\n        type: TodosActionTypes.FETCH_TODOS_ERROR,\n        payload: 'Произошла ошибка при загрузки списка дел'\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/acrtion-creators/todos.ts"],"names":["axios","TodosActionTypes","fetchTodos","dispatch","type","FETCH_TODOS","response","get","setTimeout","FETCH_TODOS_SUCCESS","payload","data","e","FETCH_TODOS_ERROR"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,QAA8C,eAA9C;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC/B,SAAO,MAAOC,QAAP,IAA2C;AACjD,QAAI;AACHA,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAEH,gBAAgB,CAACI;AAAxB,OAAD,CAAR;AACA,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,4CAAV,CAAvB;AACAC,MAAAA,UAAU,CAAC,MAAM;AAChBL,QAAAA,QAAQ,CAAC;AAACC,UAAAA,IAAI,EAAEH,gBAAgB,CAACQ,mBAAxB;AAA6CC,UAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA/D,SAAD,CAAR;AAA+E,OADtE,EACwE,GADxE,CAAV;AAEAR,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAEH,gBAAgB,CAACQ,mBAAxB;AAA6CC,QAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAA/D,OAAD,CAAR;AACA,KAND,CAME,OAAOC,CAAP,EAAU;AACXT,MAAAA,QAAQ,CAAC;AACRC,QAAAA,IAAI,EAAEH,gBAAgB,CAACY,iBADf;AAERH,QAAAA,OAAO,EAAE;AAFD,OAAD,CAAR;AAGA;AACD,GAZD;AAaA,CAdM","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"react\";\nimport { TodosActionTypes, TodosAction } from \"../types/todo\";\n\n\nexport const fetchTodos = () => {\n\treturn async (dispatch: Dispatch<TodosAction>) => {\n\t\ttry {\n\t\t\tdispatch({type: TodosActionTypes.FETCH_TODOS});\n\t\t\tconst response = await axios.get('https://jsonplaceholder.typicode.com/todos');\n\t\t\tsetTimeout(() => {\n\t\t\t\tdispatch({type: TodosActionTypes.FETCH_TODOS_SUCCESS, payload: response.data})}, 500)\n\t\t\tdispatch({type: TodosActionTypes.FETCH_TODOS_SUCCESS, payload: response.data})\n\t\t} catch (e) {\n\t\t\tdispatch({\n\t\t\t\ttype: TodosActionTypes.FETCH_TODOS_ERROR, \n\t\t\t\tpayload: 'Произошла ошибка при загрузки списка дел'})\n\t\t}\n\t}\n};"]},"metadata":{},"sourceType":"module"}
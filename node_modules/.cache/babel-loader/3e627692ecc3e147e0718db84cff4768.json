{"ast":null,"code":"var _jsxFileName = \"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/pages/TodosPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { TodoForm } from '../components/TodoForm';\nimport { TodoList } from '../components/TodoList';\nimport { useActions } from \"../hook/useActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodosPage = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const {\n    setTodoAdd\n  } = useActions();\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]');\n    setTodos(saved);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const addHandler = title => {\n    const newTodo = {\n      title: title,\n      id: Date.now(),\n      completed: false\n    };\n    setTodos(prev => [newTodo, ...prev]);\n  };\n\n  const addTodo = title => {\n    const newTodo = {\n      userId: 1,\n      id: Date.now(),\n      title,\n      completed: false\n    };\n    setTodoAdd(newTodo);\n  };\n\n  const toggleHandler = id => {\n    setTodos(prev => prev.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    }));\n  };\n\n  const removeHandler = id => {\n    const shouldRemove = window.confirm('Вы уверены?');\n\n    if (shouldRemove) {\n      setTodos(prev => prev.filter(todo => todo.id !== id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      onAdd: addHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onToggle: toggleHandler,\n      onRemove: removeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodosPage, \"9G+n/65jh3B82a53smqpaGPRsz0=\", false, function () {\n  return [useActions];\n});\n\n_c = TodosPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosPage\");","map":{"version":3,"sources":["/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/pages/TodosPage.tsx"],"names":["React","useState","useEffect","TodoForm","TodoList","useActions","TodosPage","todos","setTodos","setTodoAdd","saved","JSON","parse","localStorage","getItem","setItem","stringify","addHandler","title","newTodo","id","Date","now","completed","prev","addTodo","userId","toggleHandler","map","todo","removeHandler","shouldRemove","window","confirm","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;;AAGA,OAAO,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AAExC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAU,EAAV,CAAlC;AACC,QAAM;AAACQ,IAAAA;AAAD,MAAeJ,UAAU,EAA/B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAA5C,CAAd;AACAN,IAAAA,QAAQ,CAACE,KAAD,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeT,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,QAAMU,UAAU,GAAIC,KAAD,IAAmB;AACpC,UAAMC,OAAc,GAAG;AACrBD,MAAAA,KAAK,EAAEA,KADc;AAErBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFiB;AAGrBC,MAAAA,SAAS,EAAE;AAHU,KAAvB;AAMAf,IAAAA,QAAQ,CAACgB,IAAI,IAAI,CAACL,OAAD,EAAU,GAAGK,IAAb,CAAT,CAAR;AACD,GARD;;AAUA,QAAMC,OAAO,GAAIP,KAAD,IAAmB;AACjC,UAAMC,OAAc,GAAG;AACrBO,MAAAA,MAAM,EAAE,CADa;AAErBN,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFiB;AAGrBJ,MAAAA,KAHqB;AAIrBK,MAAAA,SAAS,EAAE;AAJU,KAAvB;AAMAd,IAAAA,UAAU,CAACU,OAAD,CAAV;AACD,GARD;;AAWA,QAAMQ,aAAa,GAAIP,EAAD,IAAgB;AACpCZ,IAAAA,QAAQ,CAACgB,IAAI,IAAIA,IAAI,CAACI,GAAL,CAASC,IAAI,IAAI;AAChC,UAAIA,IAAI,CAACT,EAAL,KAAYA,EAAhB,EAAoB;AAClBS,QAAAA,IAAI,CAACN,SAAL,GAAiB,CAACM,IAAI,CAACN,SAAvB;AACD;;AACD,aAAOM,IAAP;AACD,KALgB,CAAT,CAAR;AAMD,GAPD;;AASA,QAAMC,aAAa,GAAIV,EAAD,IAAiB;AACrC,UAAMW,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAe,aAAf,CAArB;;AACA,QAAIF,YAAJ,EAAkB;AAChBvB,MAAAA,QAAQ,CAACgB,IAAI,IAAIA,IAAI,CAACU,MAAL,CAAYL,IAAI,IAAIA,IAAI,CAACT,EAAL,KAAYA,EAAhC,CAAT,CAAR;AACD;AACF,GALD;;AAOD,sBACC;AAAA,4BACC,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,QAAD;AACA,MAAA,KAAK,EAAEV,KADP;AAEA,MAAA,QAAQ,EAAEoB,aAFV;AAGA,MAAA,QAAQ,EAAEG;AAHV;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAUA,CA7DM;;GAAMxB,S;UAGUD,U;;;KAHVC,S","sourcesContent":["import React,  {useState, useEffect} from \"react\";\nimport { TodoForm } from '../components/TodoForm';\nimport { TodoList } from '../components/TodoList';\nimport { useActions } from \"../hook/useActions\";\nimport { ITodo } from '../Interfaces';\n\nexport const TodosPage: React.FC = () => {\n\n\tconst [todos, setTodos] = useState<ITodo[]>([]);\n  const {setTodoAdd} = useActions();\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[];\n    setTodos(saved);\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }, [todos])\n\n  const addHandler = (title: string) => {\n    const newTodo: ITodo = {\n      title: title,\n      id: Date.now(),\n      completed: false\n    }\n    \n    setTodos(prev => [newTodo, ...prev])\n  }\n\n  const addTodo = (title: string) => {\n    const newTodo: ITodo = {\n      userId: 1,\n      id: Date.now(),\n      title,\n      completed: false\n    }\n    setTodoAdd(newTodo)\n  }\n\n\n  const toggleHandler = (id: number) => {\n    setTodos(prev => prev.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo\n    }))\n  }\n\n  const removeHandler = (id: number) =>  {\n    const shouldRemove = window.confirm('Вы уверены?')\n    if (shouldRemove) {\n      setTodos(prev => prev.filter(todo => todo.id !== id))\n    }\n  }\n\n\treturn (\n\t\t<>\n\t\t\t<TodoForm onAdd={addHandler}/>\n\t\t\t<TodoList \n\t\t\ttodos={todos}\n\t\t\tonToggle={toggleHandler}\n\t\t\tonRemove={removeHandler}\n\t\t\t/>\n\t\t</>\n\t)\n};"]},"metadata":{},"sourceType":"module"}
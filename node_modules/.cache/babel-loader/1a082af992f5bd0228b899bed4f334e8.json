{"ast":null,"code":"var _jsxFileName = \"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/pages/TodosPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { TodoForm } from '../components/TodoForm';\nimport { TodoList } from '../components/TodoList';\nimport { useActions } from \"../hook/useActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodosPage = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const {\n    setTodoAdd,\n    setTodoDelete\n  } = useActions();\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]');\n    setTodos(saved);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]); // const addHandler = (title: string) => {\n  //   const newTodo: ITodo = {\n  //     userId: 1,\n  //     title: title,\n  //     id: Date.now(),\n  //     completed: false\n  //   }\n  //   setTodos(prev => [newTodo, ...prev])\n  // }\n\n  const addTodo = title => {\n    const newTodo = {\n      userId: 1,\n      id: Date.now(),\n      title,\n      completed: false\n    };\n    setTodoAdd(newTodo);\n  };\n\n  const toggleHandler = id => {\n    setTodos(prev => prev.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    }));\n  };\n\n  const removeHandler = id => {\n    const shouldRemove = window.confirm('Вы уверены?');\n\n    if (shouldRemove) {\n      setTodoDelete(id);\n      setTodos(prev => prev.filter(todo => todo.id !== id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      onAdd: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TodoList // todos={todos}\n    // onToggle={toggleHandler}\n    , {\n      onRemove: removeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodosPage, \"AwzmknLrb92kTcUJMmZHP+rPXKs=\", false, function () {\n  return [useActions];\n});\n\n_c = TodosPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosPage\");","map":{"version":3,"sources":["/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/pages/TodosPage.tsx"],"names":["React","useState","useEffect","TodoForm","TodoList","useActions","TodosPage","todos","setTodos","setTodoAdd","setTodoDelete","saved","JSON","parse","localStorage","getItem","setItem","stringify","addTodo","title","newTodo","userId","id","Date","now","completed","toggleHandler","prev","map","todo","removeHandler","shouldRemove","window","confirm","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;;AAGA,OAAO,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AAExC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAU,EAAV,CAAlC;AACC,QAAM;AAACQ,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAA8BL,UAAU,EAA9C;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAA5C,CAAd;AACAP,IAAAA,QAAQ,CAACG,KAAD,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeV,KAAf,CAA9B;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT,CAVuC,CAcvC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,QAAMW,OAAO,GAAIC,KAAD,IAAmB;AACjC,UAAMC,OAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,CADa;AAErBC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFiB;AAGrBL,MAAAA,KAHqB;AAIrBM,MAAAA,SAAS,EAAE;AAJU,KAAvB;AAMAhB,IAAAA,UAAU,CAACW,OAAD,CAAV;AACD,GARD;;AAWA,QAAMM,aAAa,GAAIJ,EAAD,IAAgB;AACpCd,IAAAA,QAAQ,CAACmB,IAAI,IAAIA,IAAI,CAACC,GAAL,CAASC,IAAI,IAAI;AAChC,UAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhB,EAAoB;AAClBO,QAAAA,IAAI,CAACJ,SAAL,GAAiB,CAACI,IAAI,CAACJ,SAAvB;AACD;;AACD,aAAOI,IAAP;AACD,KALgB,CAAT,CAAR;AAMD,GAPD;;AASA,QAAMC,aAAa,GAAIR,EAAD,IAAiB;AACrC,UAAMS,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAe,aAAf,CAArB;;AACA,QAAIF,YAAJ,EAAkB;AAChBrB,MAAAA,aAAa,CAACY,EAAD,CAAb;AACAd,MAAAA,QAAQ,CAACmB,IAAI,IAAIA,IAAI,CAACO,MAAL,CAAYL,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhC,CAAT,CAAR;AACD;AACF,GAND;;AAQD,sBACC;AAAA,4BACC,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,QAAD,CACA;AACA;AAFA;AAGA,MAAA,QAAQ,EAAEY;AAHV;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAUA,CA/DM;;GAAMxB,S;UAGyBD,U;;;KAHzBC,S","sourcesContent":["import React,  {useState, useEffect} from \"react\";\nimport { TodoForm } from '../components/TodoForm';\nimport { TodoList } from '../components/TodoList';\nimport { useActions } from \"../hook/useActions\";\nimport { ITodo } from '../Interfaces';\n\nexport const TodosPage: React.FC = () => {\n\n\tconst [todos, setTodos] = useState<ITodo[]>([]);\n  const {setTodoAdd, setTodoDelete} = useActions();\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[];\n    setTodos(saved);\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  }, [todos])\n\n  // const addHandler = (title: string) => {\n  //   const newTodo: ITodo = {\n  //     userId: 1,\n  //     title: title,\n  //     id: Date.now(),\n  //     completed: false\n  //   }\n    \n  //   setTodos(prev => [newTodo, ...prev])\n  // }\n\n  const addTodo = (title: string) => {\n    const newTodo: ITodo = {\n      userId: 1,\n      id: Date.now(),\n      title,\n      completed: false\n    }\n    setTodoAdd(newTodo);\n  }\n\n\n  const toggleHandler = (id: number) => {\n    setTodos(prev => prev.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo\n    }))\n  }\n\n  const removeHandler = (id: number) =>  {\n    const shouldRemove = window.confirm('Вы уверены?')\n    if (shouldRemove) {\n      setTodoDelete(id)\n      setTodos(prev => prev.filter(todo => todo.id !== id))\n    }\n  }\n\n\treturn (\n\t\t<>\n\t\t\t<TodoForm onAdd={addTodo}/>\n\t\t\t<TodoList \n\t\t\t// todos={todos}\n\t\t\t// onToggle={toggleHandler}\n\t\t\tonRemove={removeHandler}\n\t\t\t/>\n\t\t</>\n\t)\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { fetchTodos } from \"../store/acrtion-creators/todos\";\nimport { useTypedSelector } from \"../hook/useTypesSelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = _ref => {\n  _s();\n\n  let {\n    // todoss,\n    onToggle,\n    onRemove\n  } = _ref;\n  const {\n    todos,\n    loading,\n    error\n  } = useTypedSelector(state => state.todo);\n  const {} = use;\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0418\\u0434\\u0435\\u0442 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (todos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"\\u041F\\u043E\\u043A\\u0430 \\u0434\\u0435\\u043B \\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n\n  const removeHandler = (event, id) => {\n    event.preventDefault();\n    onRemove(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: todos.map(todo => {\n      const classes = ['todo'];\n\n      if (todo.completed) {\n        classes.push('completed');\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.join(' '),\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.completed,\n            onChange: onToggle.bind(null, todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons red-text\",\n            onClick: event => removeHandler(event, todo.id),\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoList, \"CdUHFZFMjZTH0wWowihS2sG0Z0I=\", false, function () {\n  return [useTypedSelector];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoList.tsx"],"names":["React","useEffect","fetchTodos","useTypedSelector","TodoList","onToggle","onRemove","todos","loading","error","state","todo","use","dispatch","length","removeHandler","event","id","preventDefault","map","classes","completed","push","join","bind","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,UAAT,QAA2B,iCAA3B;AACA,SAASC,gBAAT,QAAiC,0BAAjC;;AASA,OAAO,MAAMC,QAAiC,GAAG,QAI3C;AAAA;;AAAA,MAJ4C;AACjD;AACAC,IAAAA,QAFiD;AAGjDC,IAAAA;AAHiD,GAI5C;AACL,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA0BN,gBAAgB,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAhD;AACA,QAAM,KAAKC,GAAX;AAEAX,EAAAA,SAAS,CAAC,MAAI;AACbY,IAAAA,QAAQ,CAACX,UAAU,EAAX,CAAR;AACA,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIM,OAAJ,EAAa;AACZ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AACD,MAAIC,KAAJ,EAAW;AACV,wBAAO;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAEF,MAAIF,KAAK,CAACO,MAAN,KAAiB,CAArB,EAAwB;AACvB,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAGD,QAAMC,aAAa,GAAG,CAACC,KAAD,EAA0BC,EAA1B,KAAyC;AAC9DD,IAAAA,KAAK,CAACE,cAAN;AACAZ,IAAAA,QAAQ,CAACW,EAAD,CAAR;AACA,GAHD;;AAKC,sBACC;AAAA,cACEV,KAAK,CAACY,GAAN,CAAUR,IAAI,IAAI;AAClB,YAAMS,OAAO,GAAG,CAAC,MAAD,CAAhB;;AACA,UAAIT,IAAI,CAACU,SAAT,EAAoB;AACnBD,QAAAA,OAAO,CAACE,IAAR,CAAa,WAAb;AACA;;AAED,0BACC;AAAI,QAAA,SAAS,EAAEF,OAAO,CAACG,IAAR,CAAa,GAAb,CAAf;AAAA,+BACC;AAAA,kCACC;AACA,YAAA,IAAI,EAAC,UADL;AAEA,YAAA,OAAO,EAAEZ,IAAI,CAACU,SAFd;AAGA,YAAA,QAAQ,EAAEhB,QAAQ,CAACmB,IAAT,CAAc,IAAd,EAAoBb,IAAI,CAACM,EAAzB;AAHV;AAAA;AAAA;AAAA;AAAA,kBADD,eAMC;AAAA,sBAAON,IAAI,CAACc;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAND,eAOC;AAAG,YAAA,SAAS,EAAC,yBAAb;AACA,YAAA,OAAO,EAAET,KAAK,IAAID,aAAa,CAACC,KAAD,EAAQL,IAAI,CAACM,EAAb,CAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,SAAuCN,IAAI,CAACM,EAA5C;AAAA;AAAA;AAAA;AAAA,cADD;AAeA,KArBA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AA0BA,CAvDM;;GAAMb,Q;UAKoBD,gB;;;KALpBC,Q","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchTodos } from \"../store/acrtion-creators/todos\";\nimport { useTypedSelector } from \"../hook/useTypesSelector\";\nimport { ITodo } from '../Interfaces';\n\ntype TodoListProps = {\n\t// todoss: ITodo[]\n\tonToggle(id: number): void\n\tonRemove(id: number): void\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n\t// todoss,\n\tonToggle,\n\tonRemove\n}) => {\n\tconst {todos, loading, error} = useTypedSelector(state => state.todo)\n\tconst {} = use\n\n\tuseEffect(()=>{\n\t\tdispatch(fetchTodos())\n\t}, [])\n\n\tif (loading) {\n\t\treturn <h1>Идет загрузка...</h1>\n\t}\n\tif (error) {\n\t\treturn <h2>{error}</h2>\n\t}\n\nif (todos.length === 0) {\n\treturn <p className=\"center\">Пока дел нет</p>\n}\n \n\nconst removeHandler = (event: React.MouseEvent, id: number) => {\n\tevent.preventDefault();\n\tonRemove(id);\n}\n\n\treturn (\n\t\t<ul>\n\t\t\t{todos.map(todo => {\n\t\t\t\tconst classes = ['todo']\n\t\t\t\tif (todo.completed) {\n\t\t\t\t\tclasses.push('completed');\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<li className={classes.join(' ')} key={todo.id}>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\t\t\tchecked={todo.completed}\n\t\t\t\t\t\t\tonChange={onToggle.bind(null, todo.id)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span>{todo.title}</span>\n\t\t\t\t\t\t\t<i className=\"material-icons red-text\" \n\t\t\t\t\t\t\tonClick={event => removeHandler(event, todo.id)}\n\t\t\t\t\t\t\t>delete</i>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t})}\n\t\t</ul>\n\t)\n}"]},"metadata":{},"sourceType":"module"}
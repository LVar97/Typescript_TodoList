{"ast":null,"code":"var _jsxFileName = \"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useTypedSelector } from \"../hook/useTypesSelector\";\nimport { useActions } from \"../hook/useActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodoList = _ref => {\n  _s();\n\n  let {\n    // todoss,\n    onToggle,\n    onRemove\n  } = _ref;\n  const {\n    todos,\n    loading,\n    error,\n    page,\n    limit\n  } = useTypedSelector(state => state.todo);\n  const {\n    fetchTodos,\n    setTodoPage\n  } = useActions();\n  const pages = [1, 2, 3, 4, 5];\n  useEffect(() => {\n    fetchTodos(page, limit);\n  }, [page]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0418\\u0434\\u0435\\u0442 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (todos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"\\u041F\\u043E\\u043A\\u0430 \\u0434\\u0435\\u043B \\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this);\n  }\n\n  const removeHandler = (event, id) => {\n    event.preventDefault();\n    onRemove(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => {\n        const classes = ['todo'];\n\n        if (todo.completed) {\n          classes.push('completed');\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: classes.join(' '),\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: todo.completed,\n              onChange: onToggle.bind(null, todo.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons red-text\",\n              onClick: event => removeHandler(event, todo.id),\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn horizontal\",\n      children: pages.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: p === page ? '2px solig green' : '1px solid gray',\n          padding: '10px'\n        },\n        onClick: () => setTodoPage(p),\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoList, \"qrcb7rvxoa9o84bLLiW6CY1rpVg=\", false, function () {\n  return [useTypedSelector, useActions];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoList.tsx"],"names":["React","useEffect","useTypedSelector","useActions","TodoList","onToggle","onRemove","todos","loading","error","page","limit","state","todo","fetchTodos","setTodoPage","pages","length","removeHandler","event","id","preventDefault","map","classes","completed","push","join","bind","title","p","border","padding"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchTodos } from \"../store/acrtion-creators/todos\";\nimport { useTypedSelector } from \"../hook/useTypesSelector\";\nimport { ITodo } from '../Interfaces';\nimport { useActions } from \"../hook/useActions\";\n\ntype TodoListProps = {\n\t// todoss: ITodo[]\n\tonToggle(id: number): void\n\tonRemove(id: number): void\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n\t// todoss,\n\tonToggle,\n\tonRemove\n}) => {\n\tconst {todos, loading, error, page, limit} = useTypedSelector(state => state.todo)\n\tconst {fetchTodos, setTodoPage} = useActions();\n\tconst pages = [1,2,3,4,5]\n\n\tuseEffect(()=>{\n\t\tfetchTodos(page, limit);\n\t}, [page])\n\n\tif (loading) {\n\t\treturn <h1>Идет загрузка...</h1>\n\t}\n\tif (error) {\n\t\treturn <h2>{error}</h2>\n\t}\n\nif (todos.length === 0) {\n\treturn <p className=\"center\">Пока дел нет</p>\n}\n \n\nconst removeHandler = (event: React.MouseEvent, id: number) => {\n\tevent.preventDefault();\n\tonRemove(id);\n}\n\n\treturn (\n\t\t<>\n\t\t<ul>\n\t\t\t{todos.map(todo => {\n\t\t\t\tconst classes = ['todo']\n\t\t\t\tif (todo.completed) {\n\t\t\t\t\tclasses.push('completed');\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<li className={classes.join(' ')} key={todo.id}>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\t\t\tchecked={todo.completed}\n\t\t\t\t\t\t\tonChange={onToggle.bind(null, todo.id)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span>{todo.title}</span>\n\t\t\t\t\t\t\t<i className=\"material-icons red-text\" \n\t\t\t\t\t\t\tonClick={event => removeHandler(event, todo.id)}\n\t\t\t\t\t\t\t>delete</i>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t})}\n\t\t</ul>\n\t\t<div className=\"btn horizontal\">\n\t\t\t{pages.map(p => (\n\t\t\t\t<div\n\t\t\t\t\tkey={p}\n\t\t\t\t\tstyle={{border: p === page ? '2px solig green' : '1px solid gray', padding: '10px'}}\n\t\t\t\t\tonClick={() => setTodoPage(p)}\t\t\t\n\t\t\t\t>{p}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t\t</>\n\t)\n}"]},"metadata":{},"sourceType":"module"}
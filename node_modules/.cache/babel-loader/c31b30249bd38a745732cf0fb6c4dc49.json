{"ast":null,"code":"var _jsxFileName = \"/Users/varvara/Desktop/dev/typescript_1/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Navbar } from './components/Navbar';\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addHandler = title => {\n    const newTodo = {\n      title: title,\n      id: Date.now(),\n      completed: false\n    };\n    setTodos(prev => [newTodo, ...prev]);\n  };\n\n  const toggleHandler = id => {\n    setTodos(prev => prev.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    }));\n  };\n\n  const removeHandler = id => {\n    const shouldRemove = window.confirm('Вы уверены?');\n\n    if (shouldRemove) {\n      setTodos(prev => prev.filter(todo => todo.id !== id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n        onAdd: addHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        onToggle: toggleHandler,\n        onRemove: removeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/varvara/Desktop/dev/typescript_1/src/App.tsx"],"names":["React","useState","Navbar","TodoForm","TodoList","App","todos","setTodos","addHandler","title","newTodo","id","Date","now","completed","prev","toggleHandler","map","todo","removeHandler","shouldRemove","window","confirm","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAU,EAAV,CAAlC;;AAEA,QAAMO,UAAU,GAAIC,KAAD,IAAmB;AACpC,UAAMC,OAAc,GAAG;AACrBD,MAAAA,KAAK,EAAEA,KADc;AAErBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFiB;AAGrBC,MAAAA,SAAS,EAAE;AAHU,KAAvB;AAMAP,IAAAA,QAAQ,CAACQ,IAAI,IAAI,CAACL,OAAD,EAAU,GAAGK,IAAb,CAAT,CAAR;AACD,GARD;;AAUA,QAAMC,aAAa,GAAIL,EAAD,IAAgB;AACpCJ,IAAAA,QAAQ,CAACQ,IAAI,IAAIA,IAAI,CAACE,GAAL,CAASC,IAAI,IAAI;AAChC,UAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhB,EAAoB;AAClBO,QAAAA,IAAI,CAACJ,SAAL,GAAiB,CAACI,IAAI,CAACJ,SAAvB;AACD;;AACD,aAAOI,IAAP;AACD,KALgB,CAAT,CAAR;AAMD,GAPD;;AASA,QAAMC,aAAa,GAAIR,EAAD,IAAiB;AACrC,UAAMS,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAe,aAAf,CAArB;;AACA,QAAIF,YAAJ,EAAkB;AAChBb,MAAAA,QAAQ,CAACQ,IAAI,IAAIA,IAAI,CAACQ,MAAL,CAAYL,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhC,CAAT,CAAR;AACD;AACF,GALD;;AAOA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEH;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AACA,QAAA,KAAK,EAAEF,KADP;AAEA,QAAA,QAAQ,EAAEU,aAFV;AAGA,QAAA,QAAQ,EAAEG;AAHV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAaD;;GA3CQd,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Navbar } from './components/Navbar';\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\nimport { ITodo } from './Interfaces';\n\nfunction App() {\n\n  const [todos, setTodos] = useState<ITodo[]>([]);\n\n  const addHandler = (title: string) => {\n    const newTodo: ITodo = {\n      title: title,\n      id: Date.now(),\n      completed: false\n    }\n    \n    setTodos(prev => [newTodo, ...prev])\n  }\n\n  const toggleHandler = (id: number) => {\n    setTodos(prev => prev.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo\n    }))\n  }\n\n  const removeHandler = (id: number) =>  {\n    const shouldRemove = window.confirm('Вы уверены?')\n    if (shouldRemove) {\n      setTodos(prev => prev.filter(todo => todo.id !== id))\n    }\n  }\n\n  return (\n    <>\n      <Navbar/>\n      <div className=\"container\">\n        <TodoForm onAdd={addHandler}/>\n        <TodoList \n        todos={todos}\n        onToggle={toggleHandler}\n        onRemove={removeHandler}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoPopup.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoPopup = _ref => {\n  _s();\n\n  let {\n    isOpen\n  } = _ref;\n  const avatarRef = React.useRef();\n  React.useEffect(() => {\n    avatarRef.current.value = '';\n  }, [props.isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({\n      /* Значение инпута, полученное с помощью рефа */\n      avatar: avatarRef.current.value\n    });\n  }\n\n  const classes = ['popup'];\n\n  if (isOpen) {\n    classes.push('popup_opened');\n  }\n\n  ;\n  console.log(isOpen);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.join(' ')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoPopup, \"i3A8oX/ZqNHll67C7LWBaRG0gLQ=\");\n\n_c = TodoPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoPopup\");","map":{"version":3,"sources":["/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoPopup.tsx"],"names":["React","TodoPopup","isOpen","avatarRef","useRef","useEffect","current","value","props","handleSubmit","e","preventDefault","onUpdateAvatar","avatar","classes","push","console","log","join"],"mappings":";;;AAAA,OAAOA,KAAP,MAA0C,OAA1C;;AAOA,OAAO,MAAMC,SAAmC,GAAG,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAEhE,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,EAAlB;AAEAJ,EAAAA,KAAK,CAACK,SAAN,CAAgB,MAAM;AACrBF,IAAAA,SAAS,CAACG,OAAV,CAAkBC,KAAlB,GAA0B,EAA1B;AACA,GAFD,EAEG,CAACC,KAAK,CAACN,MAAP,CAFH;;AAIA,WAASO,YAAT,CAAsBC,CAAtB,EAAyB;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEAH,IAAAA,KAAK,CAACI,cAAN,CAAqB;AACpB;AACAC,MAAAA,MAAM,EAAEV,SAAS,CAACG,OAAV,CAAkBC;AAFN,KAArB;AAKA;;AAED,QAAMO,OAAO,GAAG,CAAC,OAAD,CAAhB;;AAGA,MAAIZ,MAAJ,EAAY;AACXY,IAAAA,OAAO,CAACC,IAAR,CAAa,cAAb;AACA;;AAAA;AAEFC,EAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACC,sBAEC;AAAK,IAAA,SAAS,EAAEY,OAAO,CAACI,IAAR,CAAa,GAAb;AAAhB;AAAA;AAAA;AAAA;AAAA,UAFD;AAOA,CAjCM;;GAAMjB,S;;KAAAA,S","sourcesContent":["import React,  {useState, useEffect} from \"react\";\n\ntype TodoPopupProps = {\n\tisOpen: boolean,\n}\n\n\nexport const TodoPopup: React.FC<TodoPopupProps> = ({isOpen}) => {\n\n\tconst avatarRef = React.useRef();\n\n\tReact.useEffect(() => {\n\t\tavatarRef.current.value = '';\n\t}, [props.isOpen]);\n\n\tfunction handleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tprops.onUpdateAvatar({\n\t\t\t/* Значение инпута, полученное с помощью рефа */\n\t\t\tavatar: avatarRef.current.value\n\t\t});\n\t\t\n\t}\n\n\tconst classes = ['popup'];\n\n\n\tif (isOpen) {\n\t\tclasses.push('popup_opened');\n\t};\n\nconsole.log(isOpen)\n\treturn (\n\n\t\t<div className={classes.join(' ')}>\n\n\t\t</div>\n\t);\n\n}"]},"metadata":{},"sourceType":"module"}
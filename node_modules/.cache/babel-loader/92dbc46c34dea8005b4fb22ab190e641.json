{"ast":null,"code":"var _jsxFileName = \"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useTypedSelector } from \"../hook/useTypesSelector\";\nimport { useActions } from \"../hook/useActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodoList = _ref => {\n  _s();\n\n  let {\n    // todoss,\n    onToggle,\n    // onChangeTodo,\n    onRemove\n  } = _ref;\n  const {\n    todos,\n    loading,\n    error,\n    page,\n    limit\n  } = useTypedSelector(state => state.todo);\n  const {\n    fetchTodos,\n    setTodoPage\n  } = useActions();\n  const pages = [1, 2, 3, 4, 5];\n  useEffect(() => {\n    fetchTodos(page, limit);\n  }, [page]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0418\\u0434\\u0435\\u0442 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (todos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"\\u041F\\u043E\\u043A\\u0430 \\u0434\\u0435\\u043B \\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this);\n  }\n\n  const removeHandler = (event, todo) => {\n    event.preventDefault();\n    onRemove(todo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => {\n        const classes = ['todo'];\n\n        if (todo.completed) {\n          classes.push('completed');\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: classes.join(' '),\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: todo.completed,\n              onChange: onToggle.bind(null, todo),\n              id: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: todo.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icon\",\n              children: \"refactor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons red-text\",\n              onClick: event => removeHandler(event, todo),\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination row\",\n      children: pages.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `col s1 ${p === page ? \"active\" : \"waves-effect\"}`,\n        // style={{border: p === page ? '2px solig green' : '1px solid gray', padding: '10px'}}\n        onClick: () => setTodoPage(p),\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoList, \"qrcb7rvxoa9o84bLLiW6CY1rpVg=\", false, function () {\n  return [useTypedSelector, useActions];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoList.tsx"],"names":["React","useEffect","useTypedSelector","useActions","TodoList","onToggle","onRemove","todos","loading","error","page","limit","state","todo","fetchTodos","setTodoPage","pages","length","removeHandler","event","preventDefault","map","classes","completed","push","join","bind","title","id","p"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useTypedSelector } from \"../hook/useTypesSelector\";\nimport { ITodo } from '../Interfaces';\nimport { useActions } from \"../hook/useActions\";\n\ntype TodoListProps = {\n\t// todoss: ITodo[]\n\tonToggle(todo: ITodo): void,\n\t// onChangeTodo(todos: ITodo[]): ITodo[]\n\tonRemove(todo: ITodo): void\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n\t// todoss,\n\tonToggle,\n\t// onChangeTodo,\n\tonRemove\n}) => {\n\tconst {todos, loading, error, page, limit} = useTypedSelector(state => state.todo)\n\tconst {fetchTodos, setTodoPage} = useActions();\n\tconst pages = [1,2,3,4,5]\n\n\tuseEffect(()=>{\n\t\tfetchTodos(page, limit);\n\t}, [page])\n\n\tif (loading) {\n\t\treturn <h1>Идет загрузка...</h1>\n\t}\n\tif (error) {\n\t\treturn <h2>{error}</h2>\n\t}\n\nif (todos.length === 0) {\n\treturn <p className=\"center\">Пока дел нет</p>\n}\n\n\tconst removeHandler = (event: React.MouseEvent, todo: ITodo) => {\n\t\t\tevent.preventDefault();\n\t\t\tonRemove(todo);\n\t}\n\n\treturn (\n\t\t<>\n\t\t<ul>\n\t\t\t{todos.map(todo => {\n\t\t\t\tconst classes = ['todo']\n\t\t\t\tif (todo.completed) {\n\t\t\t\t\tclasses.push('completed');\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<li className={classes.join(' ')} key={todo.id}>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\t\t\t\tchecked={todo.completed}\n\t\t\t\t\t\t\t\tonChange={onToggle.bind(null, todo)}\n\t\t\t\t\t\t\t\tid=\"checkbox\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span>{todo.title}</span>\n\t\t\t\t\t\t\t<i className=\"material-icon\">refactor</i>\n\t\t\t\t\t\t\t<i className=\"material-icons red-text\" \n\t\t\t\t\t\t\tonClick={event => removeHandler(event, todo)}\n\t\t\t\t\t\t\t>delete</i>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t})}\n\t\t</ul>\n\t\t<ul className=\"pagination row\">\n\t\t\t{pages.map(p => (\n\t\t\t\t<li\n\t\t\t\t\tclassName={`col s1 ${p === page ? \"active\" : \"waves-effect\"}`}\n\t\t\t\t\tkey={p}\n\t\t\t\t\t// style={{border: p === page ? '2px solig green' : '1px solid gray', padding: '10px'}}\n\t\t\t\t\tonClick={() => setTodoPage(p)}\t\t\t\n\t\t\t\t>{p}\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t\t</>\n\t)\n}"]},"metadata":{},"sourceType":"module"}
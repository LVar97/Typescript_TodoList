{"ast":null,"code":"var _jsxFileName = \"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoList.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = _ref => {\n  let {\n    todoss,\n    onToggle,\n    onRemove\n  } = _ref;\n\n  if (todoss.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"\\u041F\\u043E\\u043A\\u0430 \\u0434\\u0435\\u043B \\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this);\n  } // const removeHandler = (event: React.MouseEvent, id: number) => {\n  // \tevent.preventDefault();\n  // \tonRemove(id);\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: todos.map(todo => {\n      const classes = ['todo'];\n      console.log(classes);\n\n      if (todo.completed) {\n        classes.push('completed');\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: classes.join(' '),\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.completed,\n            onChange: onToggle.bind(null, todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons red-text\" // onClick={event => removeHandler(event, todo.id)}\n            ,\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this)\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 6\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoList.tsx"],"names":["React","TodoList","todoss","onToggle","onRemove","length","todos","map","todo","classes","console","log","completed","push","join","bind","id","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAUA,OAAO,MAAMC,QAAiC,GAAG,QAI3C;AAAA,MAJ4C;AACjDC,IAAAA,MADiD;AAEjDC,IAAAA,QAFiD;AAGjDC,IAAAA;AAHiD,GAI5C;;AAGN,MAAIF,MAAM,CAACG,MAAP,KAAkB,CAAtB,EAAyB;AACxB,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA,GALK,CAQN;AACA;AACA;AACA;;;AAEC,sBACC;AAAA,cACEC,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AAClB,YAAMC,OAAO,GAAG,CAAC,MAAD,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,UAAID,IAAI,CAACI,SAAT,EAAoB;AACnBH,QAAAA,OAAO,CAACI,IAAR,CAAa,WAAb;AACA;;AAED,0BACC;AAAI,QAAA,SAAS,EAAEJ,OAAO,CAACK,IAAR,CAAa,GAAb,CAAf;AAAA,+BACC;AAAA,kCACC;AACA,YAAA,IAAI,EAAC,UADL;AAEA,YAAA,OAAO,EAAEN,IAAI,CAACI,SAFd;AAGA,YAAA,QAAQ,EAAET,QAAQ,CAACY,IAAT,CAAc,IAAd,EAAoBP,IAAI,CAACQ,EAAzB;AAHV;AAAA;AAAA;AAAA;AAAA,kBADD,eAMC;AAAA,sBAAOR,IAAI,CAACS;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAND,eAOC;AAAG,YAAA,SAAS,EAAC,yBAAb,CACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,SAAuCT,IAAI,CAACQ,EAA5C;AAAA;AAAA;AAAA;AAAA,cADD;AAeA,KAtBA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AA2BA,CA5CM;KAAMf,Q","sourcesContent":["import React from \"react\";\nimport { useTypedSelector } from \"../hook/useTypesSelector\";\nimport { ITodo } from '../Interfaces';\n\ntype TodoListProps = {\n\ttodoss: ITodo[]\n\tonToggle(id: number): void\n\tonRemove(id: number): void\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n\ttodoss,\n\tonToggle,\n\tonRemove\n}) => {\n\n\t\nif (todoss.length === 0) {\n\treturn <p className=\"center\">Пока дел нет</p>\n}\n \n\n// const removeHandler = (event: React.MouseEvent, id: number) => {\n// \tevent.preventDefault();\n// \tonRemove(id);\n// }\n\n\treturn (\n\t\t<ul>\n\t\t\t{todos.map(todo => {\n\t\t\t\tconst classes = ['todo']\n\t\t\t\tconsole.log(classes)\n\t\t\t\tif (todo.completed) {\n\t\t\t\t\tclasses.push('completed');\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<li className={classes.join(' ')} key={todo.id}>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\t\t\tchecked={todo.completed}\n\t\t\t\t\t\t\tonChange={onToggle.bind(null, todo.id)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span>{todo.title}</span>\n\t\t\t\t\t\t\t<i className=\"material-icons red-text\" \n\t\t\t\t\t\t\t// onClick={event => removeHandler(event, todo.id)}\n\t\t\t\t\t\t\t>delete</i>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t})}\n\t\t</ul>\n\t)\n}"]},"metadata":{},"sourceType":"module"}
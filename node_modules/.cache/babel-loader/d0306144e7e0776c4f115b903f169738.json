{"ast":null,"code":"var _jsxFileName = \"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/common/Popup/TodoPopup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./TodoPopup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoPopup = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    onChange,\n    todo,\n    onClose\n  } = _ref;\n  const ref = useRef(null);\n  const [title, setTitle] = useState(todo.title);\n\n  const handleChangeTodo = event => {\n    event.preventDefault();\n    const enteredTitle = event.target.value;\n    setTitle(enteredTitle);\n  };\n\n  console.log(title);\n  useEffect(() => {\n    setTitle(todo.title);\n  }, [isOpen]);\n  const classes = ['popup'];\n\n  if (isOpen) {\n    classes.push('popup_opened');\n  }\n\n  ;\n\n  const keyPressHandler = event => {\n    event.preventDefault();\n\n    if (event.key === 'Enter') {\n      onChange(ref.current.value);\n      onClose();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.join(' '),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"popup__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"popup__close\",\n          \"aria-label\": \"Close\",\n          type: \"button\",\n          onClick: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"todos\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onKeyPress: keyPressHandler,\n            ref: ref,\n            type: \"text\",\n            id: \"title\",\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0434\\u0435\\u043B\\u0430\",\n            onChange: handleChangeTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this), \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u0435 \\u043F\\u043E\\u043B\\u044F \\u0438 \\u043D\\u0430\\u0436\\u043C\\u0438  \\u21B5 Enter\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoPopup, \"QYtlekuE830RtXBjBK+zZLeVt7s=\");\n\n_c = TodoPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoPopup\");","map":{"version":3,"sources":["/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/common/Popup/TodoPopup.tsx"],"names":["React","useState","useEffect","useRef","TodoPopup","isOpen","onChange","todo","onClose","ref","title","setTitle","handleChangeTodo","event","preventDefault","enteredTitle","target","value","console","log","classes","push","keyPressHandler","key","current","join"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAA+D,OAA/D;AAEA,OAAO,iBAAP;;AAUA,OAAO,MAAMC,SAAmC,GAAG,QAAuC;AAAA;;AAAA,MAAtC;AAACC,IAAAA,MAAD;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA;AAAzB,GAAsC;AAEzF,QAAMC,GAAG,GAAGN,MAAM,CAAmB,IAAnB,CAAlB;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACM,IAAI,CAACG,KAAN,CAAlC;;AAEA,QAAME,gBAAgB,GAAIC,KAAD,IAA0C;AAClEA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,YAAY,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAlC;AACAN,IAAAA,QAAQ,CAACI,YAAD,CAAR;AACA,GAJD;;AAMAG,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACfS,IAAAA,QAAQ,CAACJ,IAAI,CAACG,KAAN,CAAR;AACA,GAFQ,EAEN,CAACL,MAAD,CAFM,CAAT;AAIA,QAAMe,OAAO,GAAG,CAAC,OAAD,CAAhB;;AACA,MAAIf,MAAJ,EAAY;AACXe,IAAAA,OAAO,CAACC,IAAR,CAAa,cAAb;AACA;;AAAA;;AAED,QAAMC,eAAe,GAAIT,KAAD,IAAgC;AACvDA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAID,KAAK,CAACU,GAAN,KAAc,OAAlB,EAA0B;AACzBjB,MAAAA,QAAQ,CAACG,GAAG,CAACe,OAAJ,CAAaP,KAAd,CAAR;AACAT,MAAAA,OAAO;AACP;AACD,GAND;;AAQA,sBAEC;AAAK,IAAA,SAAS,EAAEY,OAAO,CAACK,IAAR,CAAa,GAAb,CAAhB;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACC;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,gCACA;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,wBAAW,OAA5C;AAAoD,UAAA,IAAI,EAAC,QAAzD;AAAkE,UAAA,OAAO,EAAEjB;AAA3E;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAA,kCACE;AACC,YAAA,UAAU,EAAEc,eADb;AAEC,YAAA,GAAG,EAAEb,GAFN;AAGC,YAAA,IAAI,EAAC,MAHN;AAIC,YAAA,EAAE,EAAC,OAJJ;AAKC,YAAA,WAAW,EAAC,sHALb;AAMC,YAAA,QAAQ,EAAEG;AANX;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UAFD;AAoCA,CAlEM;;GAAMR,S;;KAAAA,S","sourcesContent":["import React,  {useState, useEffect, useRef, ChangeEvent} from \"react\";\nimport { ITodo } from \"../../../Interfaces\";\nimport \"./TodoPopup.css\";\n\ntype TodoPopupProps = {\n\tisOpen: boolean,\n\tonChange(title: string): void,\n\tonClose: () => void,\n\ttodo: ITodo\n}\n\n\nexport const TodoPopup: React.FC<TodoPopupProps> = ({isOpen, onChange, todo, onClose}) => {\n\n\tconst ref = useRef<HTMLInputElement>(null);\n\tconst [title, setTitle] = useState(todo.title);\n\n\tconst handleChangeTodo = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tevent.preventDefault();\n\t\tconst enteredTitle = event.target.value;\n\t\tsetTitle(enteredTitle);\n\t}\n\n\tconsole.log(title)\n\n\tuseEffect(() => {\n\t\tsetTitle(todo.title)\n\t}, [isOpen]);\n\n\tconst classes = ['popup'];\n\tif (isOpen) {\n\t\tclasses.push('popup_opened');\n\t};\n\n\tconst keyPressHandler = (event: React.KeyboardEvent) => {\n\t\tevent.preventDefault();\n\t\tif (event.key === 'Enter'){\n\t\t\tonChange(ref.current!.value);\n\t\t\tonClose();\n\t\t}\n\t}\n\n\treturn (\n\n\t\t<div className={classes.join(' ')}>\n\t\t\t<div className=\"popup__container\">\n\t\t\t\t<form className=\"popup__content\">\n\t\t\t\t<button className=\"popup__close\" aria-label=\"Close\" type=\"button\" onClick={onClose}/>\n\t\t\t\t<label className=\"todos\">\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\tonKeyPress={keyPressHandler}\n\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tid=\"title\" \n\t\t\t\t\t\t\tplaceholder=\"Введите название дела\"\n\t\t\t\t\t\t\tonChange={handleChangeTodo}/>\n\t\t\t\t\t\t\t{/* <input \n\t\t\t\t\t\t\tref={ref} \n\t\t\t\t\t\t\ttitle=\"Измени значение поля и нажми Enter\"\n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tid=\"title\" \n\t\t\t\t\t\t\trequired \n\t\t\t\t\t\t\tonKeyPress={keyPressHandler}\n\t\t\t\t\t\t\tvalue={title || ''}\n\t\t\t\t\t\t\tonChange={handleChangeTodo}\n\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\tИзмени значение поля и нажми \t&#8629; Enter\n\t\t\t\t</label>\n\n\t\t\t\t</form>\n\n\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\n\t\t</div>\n\t);\n\n}"]},"metadata":{},"sourceType":"module"}
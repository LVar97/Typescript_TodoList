{"ast":null,"code":"var _jsxFileName = \"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoPopup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoPopup = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    onChange,\n    todo\n  } = _ref;\n  const ref = useRef(null); // const handleChangeTodo = (e: ChangeEvent<HTMLInputElement>) =>{\n  // \tconst newValue = e.target.value;\n  // }\n\n  const classes = ['popup'];\n\n  if (isOpen) {\n    classes.push('popup_opened');\n  }\n\n  ;\n\n  const keyPressHandler = event => {\n    if (event.key === 'Enter') {\n      onChange(ref.current.value); // ref.current!.value = '';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.join(' '),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"popup__content\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"todo\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: ref,\n            type: \"text\",\n            name: \"edit\",\n            id: \"title\",\n            className: \"\",\n            required: true,\n            onKeyPress: keyPressHandler,\n            value: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons px1\" // onClick={event => editHandler(event, todo)}\n              ,\n              children: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons red-text\" // onClick={event => removeHandler(event, todo)}\n              ,\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoPopup, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\n_c = TodoPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoPopup\");","map":{"version":3,"sources":["/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoPopup.tsx"],"names":["React","useRef","TodoPopup","isOpen","onChange","todo","ref","classes","push","keyPressHandler","event","key","current","value","join","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAqCC,MAArC,QAA+D,OAA/D;;AAUA,OAAO,MAAMC,SAAmC,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAACC,IAAAA,MAAD;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAA6B;AAEhF,QAAMC,GAAG,GAAGL,MAAM,CAAmB,IAAnB,CAAlB,CAFgF,CAIhF;AACA;AACA;;AAEA,QAAMM,OAAO,GAAG,CAAC,OAAD,CAAhB;;AACA,MAAIJ,MAAJ,EAAY;AACXI,IAAAA,OAAO,CAACC,IAAR,CAAa,cAAb;AACA;;AAAA;;AAED,QAAMC,eAAe,GAAIC,KAAD,IAAgC;AACvD,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA0B;AACzBP,MAAAA,QAAQ,CAACE,GAAG,CAACM,OAAJ,CAAaC,KAAd,CAAR,CADyB,CAEzB;AACA;AACD,GALD;;AAOA,sBAEC;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACO,IAAR,CAAa,GAAb,CAAhB;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACC;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA,+BACA;AAAO,UAAA,SAAS,EAAC,MAAjB;AAAA,kCAOG;AACA,YAAA,GAAG,EAAER,GADL;AAEA,YAAA,IAAI,EAAC,MAFL;AAGA,YAAA,IAAI,EAAC,MAHL;AAIA,YAAA,EAAE,EAAC,OAJH;AAKA,YAAA,SAAS,EAAC,EALV;AAMA,YAAA,QAAQ,MANR;AAOA,YAAA,UAAU,EAAEG,eAPZ;AAQA,YAAA,KAAK,EAAEJ,IAAI,CAACU;AARZ;AAAA;AAAA;AAAA;AAAA,kBAPH,eAkBG;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA,oCACC;AAAG,cAAA,SAAS,EAAC,oBAAb,CACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAIC;AAAG,cAAA,SAAS,EAAC,yBAAb,CACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UAFD;AA2CA,CA/DM;;GAAMb,S;;KAAAA,S","sourcesContent":["import React,  {useState, useEffect, useRef, ChangeEvent} from \"react\";\nimport { ITodo } from \"../Interfaces\";\n\ntype TodoPopupProps = {\n\tisOpen: boolean,\n\tonChange(title: string): void,\n\ttodo: ITodo\n}\n\n\nexport const TodoPopup: React.FC<TodoPopupProps> = ({isOpen, onChange, todo}) => {\n\n\tconst ref = useRef<HTMLInputElement>(null);\n\n\t// const handleChangeTodo = (e: ChangeEvent<HTMLInputElement>) =>{\n\t// \tconst newValue = e.target.value;\n\t// }\n\n\tconst classes = ['popup'];\n\tif (isOpen) {\n\t\tclasses.push('popup_opened');\n\t};\n\n\tconst keyPressHandler = (event: React.KeyboardEvent) => {\n\t\tif (event.key === 'Enter'){\n\t\t\tonChange(ref.current!.value);\n\t\t\t// ref.current!.value = '';\n\t\t}\n\t}\n\n\treturn (\n\n\t\t<div className={classes.join(' ')}>\n\t\t\t<div className=\"popup__container\">\n\t\t\t\t<form className=\"popup__content\">\n\t\t\t\t<label className=\"todo\">\n\t\t\t\t\t\t\t{/* <input \n\t\t\t\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\t\t\t\t// checked={todo.completed}\n\t\t\t\t\t\t\t\t// onChange={onToggle.bind(null, todo)}\n\t\t\t\t\t\t\t\tid=\"checkbox\"\n\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\tref={ref} \n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tname=\"edit\"  \n\t\t\t\t\t\t\tid=\"title\" \n\t\t\t\t\t\t\tclassName=\"\" \n\t\t\t\t\t\t\trequired \n\t\t\t\t\t\t\tonKeyPress={keyPressHandler}\n\t\t\t\t\t\t\tvalue={todo.title}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{/* <span>fcs</span> */}\n\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t<i className=\"material-icons px1\"\n\t\t\t\t\t\t\t\t// onClick={event => editHandler(event, todo)}\n\t\t\t\t\t\t\t\t>edit</i>\n\t\t\t\t\t\t\t\t<i className=\"material-icons red-text\" \n\t\t\t\t\t\t\t\t// onClick={event => removeHandler(event, todo)}\n\t\t\t\t\t\t\t\t>delete</i>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t</label>\n\n\t\t\t\t</form>\n\n\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\n\t\t</div>\n\t);\n\n}"]},"metadata":{},"sourceType":"module"}
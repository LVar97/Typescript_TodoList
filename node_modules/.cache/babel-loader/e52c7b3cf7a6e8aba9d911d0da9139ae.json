{"ast":null,"code":"var _jsxFileName = \"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoPopup.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoPopup = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    onChange\n  } = _ref;\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current.value = '';\n  }, [isOpen]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onChange(ref.current.value);\n  };\n\n  const classes = ['popup'];\n\n  if (isOpen) {\n    classes.push('popup_opened');\n  }\n\n  ;\n  console.log(isOpen);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.join(' '),\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: ref,\n      type: \"text\",\n      name: \"edit\",\n      id: \"title\",\n      className: \"\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoPopup, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c = TodoPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoPopup\");","map":{"version":3,"sources":["/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoPopup.tsx"],"names":["React","useEffect","useRef","TodoPopup","isOpen","onChange","ref","current","value","handleSubmit","event","preventDefault","classes","push","console","log","join"],"mappings":";;;AAAA,OAAOA,KAAP,IAA0BC,SAA1B,EAAqCC,MAArC,QAAkD,OAAlD;;AASA,OAAO,MAAMC,SAAmC,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAuB;AAE1E,QAAMC,GAAG,GAAGJ,MAAM,CAAmB,IAAnB,CAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfK,IAAAA,GAAG,CAACC,OAAJ,CAAaC,KAAb,GAAqB,EAArB;AACA,GAFQ,EAEN,CAACJ,MAAD,CAFM,CAAT;;AAIA,QAAMK,YAAY,GAAIC,KAAD,IAA6B;AACjDA,IAAAA,KAAK,CAACC,cAAN;AAEAN,IAAAA,QAAQ,CACPC,GAAG,CAACC,OAAJ,CAAaC,KADN,CAAR;AAIA,GAPD;;AASA,QAAMI,OAAO,GAAG,CAAC,OAAD,CAAhB;;AAGA,MAAIR,MAAJ,EAAY;AACXQ,IAAAA,OAAO,CAACC,IAAR,CAAa,cAAb;AACA;;AAAA;AAEFC,EAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACC,sBAEC;AAAK,IAAA,SAAS,EAAEQ,OAAO,CAACI,IAAR,CAAa,GAAb,CAAhB;AAAA,2BACC;AAAO,MAAA,GAAG,EAAEV,GAAZ;AAAiB,MAAA,IAAI,EAAC,MAAtB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAA0C,MAAA,EAAE,EAAC,OAA7C;AAAqD,MAAA,SAAS,EAAC,EAA/D;AAAkE,MAAA,QAAQ;AAA1E;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UAFD;AAQA,CAjCM;;GAAMH,S;;KAAAA,S","sourcesContent":["import React,  {useState, useEffect, useRef} from \"react\";\nimport { ITodo } from \"../Interfaces\";\n\ntype TodoPopupProps = {\n\tisOpen: boolean,\n\tonChange(title: string): void\n}\n\n\nexport const TodoPopup: React.FC<TodoPopupProps> = ({isOpen, onChange}) => {\n\n\tconst ref = useRef<HTMLInputElement>(null);\n\n\tuseEffect(() => {\n\t\tref.current!.value = '';\n\t}, [isOpen]);\n\n\tconst handleSubmit = (event: React.MouseEvent) => {\n\t\tevent.preventDefault();\n\n\t\tonChange(\n\t\t\tref.current!.value\n\t\t);\n\t\t\n\t}\n\n\tconst classes = ['popup'];\n\n\n\tif (isOpen) {\n\t\tclasses.push('popup_opened');\n\t};\n\nconsole.log(isOpen)\n\treturn (\n\n\t\t<div className={classes.join(' ')}>\n\t\t\t<input ref={ref} type=\"text\" name=\"edit\"  id=\"title\" className=\"\" required />\n\n\t\t</div>\n\t);\n\n}"]},"metadata":{},"sourceType":"module"}
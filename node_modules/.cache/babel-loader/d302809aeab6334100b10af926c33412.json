{"ast":null,"code":"var _jsxFileName = \"/Users/varvara/Desktop/dev/typescript_1/src/components/TodoForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoForm = props => {\n  _s();\n\n  // const [title, setTitle] = useState<string>('');\n  // const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n  // \tsetTitle(event.target.value)\n  // }\n  const ref = useRef(null);\n\n  const keyPressHandler = event => {\n    if (event.key === 'Enter') {\n      // console.log(ref.current!.value)\n      props.onAdd(ref.current.value);\n      ref.current.value = ''; // setTitle('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-field mt2\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      // onChange={changeHandler}\n      onKeyPress: keyPressHandler // value={title} \n      ,\n      ref: ref,\n      type: \"text\",\n      id: \"title\",\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0434\\u0435\\u043B\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      className: \"active\",\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0434\\u0435\\u043B\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TodoForm, \"QMBuJFIdzLIeqBcFwhMf246mjOM=\");\n\n_c = TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/varvara/Desktop/dev/typescript_1/src/components/TodoForm.tsx"],"names":["React","useRef","TodoForm","props","ref","keyPressHandler","event","key","onAdd","current","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAyBC,MAAzB,QAAsC,OAAtC;;AAMA,OAAO,MAAMC,QAAgD,GAAIC,KAAD,IAAW;AAAA;;AAE1E;AACA;AACA;AACA;AAEA,QAAMC,GAAG,GAAGH,MAAM,CAAmB,IAAnB,CAAlB;;AAGA,QAAMI,eAAe,GAAIC,KAAD,IAAgC;AACvD,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA0B;AACzB;AACAJ,MAAAA,KAAK,CAACK,KAAN,CAAYJ,GAAG,CAACK,OAAJ,CAAaC,KAAzB;AACAN,MAAAA,GAAG,CAACK,OAAJ,CAAaC,KAAb,GAAqB,EAArB,CAHyB,CAIzB;AACA;AACD,GAPD;;AASA,sBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACC;AACA;AACA,MAAA,UAAU,EAAEL,eAFZ,CAGA;AAHA;AAIA,MAAA,GAAG,EAAED,GAJL;AAKA,MAAA,IAAI,EAAC,MALL;AAMA,MAAA,EAAE,EAAC,OANH;AAOA,MAAA,WAAW,EAAC;AAPZ;AAAA;AAAA;AAAA;AAAA,YADD,eASC;AAAO,MAAA,OAAO,EAAC,OAAf;AAAuB,MAAA,SAAS,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAaA,CAhCM;;GAAMF,Q;;KAAAA,Q","sourcesContent":["import React, {useState, useRef} from \"react\";\n\ninterface TodoFormProps {\n\tonAdd(title: string): void\n}\n\nexport const TodoForm: React.FunctionComponent<TodoFormProps> = (props) => {\n\n\t// const [title, setTitle] = useState<string>('');\n\t// const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t// \tsetTitle(event.target.value)\n\t// }\n\t\n\tconst ref = useRef<HTMLInputElement>(null)\n\n\n\tconst keyPressHandler = (event: React.KeyboardEvent) => {\n\t\tif (event.key === 'Enter'){\n\t\t\t// console.log(ref.current!.value)\n\t\t\tprops.onAdd(ref.current!.value);\n\t\t\tref.current!.value = ''\n\t\t\t// setTitle('');\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"input-field mt2\">\n\t\t\t<input \n\t\t\t// onChange={changeHandler}\n\t\t\tonKeyPress={keyPressHandler}\n\t\t\t// value={title} \n\t\t\tref={ref}\n\t\t\ttype=\"text\" \n\t\t\tid=\"title\" \n\t\t\tplaceholder=\"Введите название дела\"/>\n\t\t\t<label htmlFor=\"title\" className=\"active\">Введите название дела</label>\n\t\t</div>\n\t)\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/pages/TodosPage.tsx\";\nimport React from \"react\";\nimport { TodoForm } from '../components/TodoForm';\nimport { TodoList } from '../components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TodosPage = () => {\n  // const [todos, setTodos] = useState<ITodo[]>([]);\n  // useEffect(() => {\n  //   const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[];\n  //   setTodos(saved);\n  // }, [])\n  // useEffect(() => {\n  //   localStorage.setItem('todos', JSON.stringify(todos))\n  // }, [todos])\n  // const addHandler = (title: string) => {\n  //   const newTodo: ITodo = {\n  //     title: title,\n  //     id: Date.now(),\n  //     completed: false\n  //   }\n  //   setTodos(prev => [newTodo, ...prev])\n  // }\n  // const toggleHandler = (id: number) => {\n  //   setTodos(prev => prev.map(todo => {\n  //     if (todo.id === id) {\n  //       todo.completed = !todo.completed\n  //     }\n  //     return todo\n  //   }))\n  // }\n  // const removeHandler = (id: number) =>  {\n  //   const shouldRemove = window.confirm('Вы уверены?')\n  //   if (shouldRemove) {\n  //     setTodos(prev => prev.filter(todo => todo.id !== id))\n  //   }\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TodoForm // onAdd={addHandler}\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TodoList // todos={todos}\n    // onToggle={toggleHandler}\n    // onRemove={removeHandler}\n    , {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_c = TodosPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosPage\");","map":{"version":3,"sources":["/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/pages/TodosPage.tsx"],"names":["React","TodoForm","TodoList","TodosPage"],"mappings":";AAAA,OAAOA,KAAP,MAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;;AAGA,OAAO,MAAMC,SAAmB,GAAG,MAAM;AAExC;AAEC;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAED,sBACC;AAAA,4BACC,QAAC,QAAD,CACG;AADH;AAAA;AAAA;AAAA;AAAA,YADD,eAIC,QAAC,QAAD,CACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA,kBADD;AAYA,CAnDM;KAAMA,S","sourcesContent":["import React,  {useState, useEffect} from \"react\";\nimport { TodoForm } from '../components/TodoForm';\nimport { TodoList } from '../components/TodoList';\nimport { ITodo } from '../Interfaces';\n\nexport const TodosPage: React.FC = () => {\n\n\t// const [todos, setTodos] = useState<ITodo[]>([]);\n\n  // useEffect(() => {\n  //   const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[];\n  //   setTodos(saved);\n  // }, [])\n\n  // useEffect(() => {\n  //   localStorage.setItem('todos', JSON.stringify(todos))\n  // }, [todos])\n\n  // const addHandler = (title: string) => {\n  //   const newTodo: ITodo = {\n  //     title: title,\n  //     id: Date.now(),\n  //     completed: false\n  //   }\n    \n  //   setTodos(prev => [newTodo, ...prev])\n  // }\n\n  // const toggleHandler = (id: number) => {\n  //   setTodos(prev => prev.map(todo => {\n  //     if (todo.id === id) {\n  //       todo.completed = !todo.completed\n  //     }\n  //     return todo\n  //   }))\n  // }\n\n  // const removeHandler = (id: number) =>  {\n  //   const shouldRemove = window.confirm('Вы уверены?')\n  //   if (shouldRemove) {\n  //     setTodos(prev => prev.filter(todo => todo.id !== id))\n  //   }\n  // }\n\n\treturn (\n\t\t<>\n\t\t\t<TodoForm \n      // onAdd={addHandler}\n      />\n\t\t\t<TodoList \n\t\t\t// todos={todos}\n\t\t\t// onToggle={toggleHandler}\n\t\t\t// onRemove={removeHandler}\n\t\t\t/>\n\t\t</>\n\t)\n};"]},"metadata":{},"sourceType":"module"}
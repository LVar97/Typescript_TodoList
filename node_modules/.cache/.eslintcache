[{"/Users/varvara/Desktop/dev/Project/typescript_1/src/index.tsx":"1","/Users/varvara/Desktop/dev/Project/typescript_1/src/reportWebVitals.ts":"2","/Users/varvara/Desktop/dev/Project/typescript_1/src/App.tsx":"3","/Users/varvara/Desktop/dev/Project/typescript_1/src/pages/TodosPage.tsx":"4","/Users/varvara/Desktop/dev/Project/typescript_1/src/pages/AboutPage.tsx":"5","/Users/varvara/Desktop/dev/Project/typescript_1/src/components/Navbar.tsx":"6","/Users/varvara/Desktop/dev/Project/typescript_1/src/components/TodoForm.tsx":"7","/Users/varvara/Desktop/dev/Project/typescript_1/src/components/TodoList.tsx":"8","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/index.tsx":"9","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/reportWebVitals.ts":"10","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/App.tsx":"11","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/Navbar.tsx":"12","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/pages/AboutPage.tsx":"13","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/pages/TodosPage.tsx":"14","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoForm.tsx":"15","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoList.tsx":"16","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/store/index.ts":"17","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/store/redusers/index.ts":"18","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/store/redusers/todosReducer.ts":"19","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/types/todo.ts":"20","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/hook/useTypesSelector.ts":"21","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/store/acrtion-creators/todos.ts":"22","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/hook/useActions.ts":"23","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/Interfaces.ts":"24","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/common/Popup/TodoPopup.tsx":"25","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/common/Preloader/Preloader.tsx":"26"},{"size":500,"mtime":1642679203047,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1642679203048,"results":"29","hashOfConfig":"28"},{"size":546,"mtime":1642695796768,"results":"30","hashOfConfig":"28"},{"size":1249,"mtime":1642694407489,"results":"31","hashOfConfig":"28"},{"size":375,"mtime":1642694472074,"results":"32","hashOfConfig":"28"},{"size":421,"mtime":1642695535404,"results":"33","hashOfConfig":"28"},{"size":967,"mtime":1642689287620,"results":"34","hashOfConfig":"28"},{"size":1023,"mtime":1642693619402,"results":"35","hashOfConfig":"28"},{"size":585,"mtime":1645089942560,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":1645052604765,"results":"38","hashOfConfig":"37"},{"size":575,"mtime":1645089782791,"results":"39","hashOfConfig":"37"},{"size":564,"mtime":1645089782792,"results":"40","hashOfConfig":"37"},{"size":1669,"mtime":1645089782798,"results":"41","hashOfConfig":"37"},{"size":1712,"mtime":1645089782799,"results":"42","hashOfConfig":"37"},{"size":682,"mtime":1645089782793,"results":"43","hashOfConfig":"37"},{"size":2053,"mtime":1645089782793,"results":"44","hashOfConfig":"37"},{"size":200,"mtime":1645089782802,"results":"45","hashOfConfig":"37"},{"size":214,"mtime":1645089782802,"results":"46","hashOfConfig":"37"},{"size":1408,"mtime":1645089782803,"results":"47","hashOfConfig":"37"},{"size":1457,"mtime":1645089782804,"results":"48","hashOfConfig":"37"},{"size":190,"mtime":1645089782797,"results":"49","hashOfConfig":"37"},{"size":1419,"mtime":1645089782801,"results":"50","hashOfConfig":"37"},{"size":288,"mtime":1645089782796,"results":"51","hashOfConfig":"37"},{"size":94,"mtime":1645042282645,"results":"52","hashOfConfig":"37"},{"size":1371,"mtime":1645089782795,"results":"53","hashOfConfig":"37"},{"size":418,"mtime":1645089782795,"results":"54","hashOfConfig":"37"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"psijem",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jfdbke",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/varvara/Desktop/dev/Project/typescript_1/src/index.tsx",[],"/Users/varvara/Desktop/dev/Project/typescript_1/src/reportWebVitals.ts",[],"/Users/varvara/Desktop/dev/Project/typescript_1/src/App.tsx",[],"/Users/varvara/Desktop/dev/Project/typescript_1/src/pages/TodosPage.tsx",[],"/Users/varvara/Desktop/dev/Project/typescript_1/src/pages/AboutPage.tsx",[],"/Users/varvara/Desktop/dev/Project/typescript_1/src/components/Navbar.tsx",[],"/Users/varvara/Desktop/dev/Project/typescript_1/src/components/TodoForm.tsx",["111"],"/Users/varvara/Desktop/dev/Project/typescript_1/src/components/TodoList.tsx",[],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/index.tsx",[],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/reportWebVitals.ts",[],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/App.tsx",[],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/Navbar.tsx",[],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/pages/AboutPage.tsx",[],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/pages/TodosPage.tsx",["112"],"import React,  {useState, useEffect} from \"react\";\nimport { TodoForm } from '../components/TodoForm';\nimport { TodoList } from '../components/TodoList';\nimport { TodoPopup } from \"../components/common/Popup/TodoPopup\";\nimport { useActions } from \"../hook/useActions\";\nimport { ITodo } from '../Interfaces';\n\nexport const TodosPage: React.FC = () => {\n\n  const [todo, setTodo] = useState<ITodo>({\n    userId: 1,\n    id: 1,\n    title: '',\n    completed: false\n  });\n\n  const [isOpen, setIsOpen] = useState(false);\n  const {setTodoAdd, setTodoDelete, setTodoChange, setTodoCompleted} = useActions();\n\n  const isTodoPopupOpened = (todo: ITodo) => {\n    setIsOpen(!isOpen);\n    setTodo(todo);\n  }\n \n  const isTodoPopupClosed = () => {\n    setIsOpen(!isOpen);\n  }\n\n  const addTodo = (title: string) => {\n    const newTodo: ITodo = {\n      userId: 1,\n      id: Date.now(),\n      title,\n      completed: false\n    }\n    setTodoAdd(newTodo);\n  }\n\n  const changeTodo = (title: string) => {\n    const changeTodo: ITodo = {\n      userId: todo.userId,\n      id: todo.id,\n      title,\n      completed: todo.completed\n    }\n    setTodoChange(changeTodo);\n  }\n\n\n  const toggleHandler = (todo: ITodo) => {\n    setTodoCompleted(todo);\n  }\n\n  const removeHandler = (todo: ITodo) =>  {\n    const shouldRemove = window.confirm('Вы уверены?')\n    if (shouldRemove) {\n      setTodoDelete(todo);\n    }\n  }\n\n\treturn (\n\t\t<div className=\"spiner\">\n\t\t\t<TodoForm onAdd={addTodo}/>\n\t\t\t<TodoList \n\t\t\tonToggle={toggleHandler}\n      onOpen={isTodoPopupOpened}\n\t\t\tonRemove={removeHandler}\n\t\t\t/>\n      <TodoPopup \n      isOpen={isOpen}\n      onClose={isTodoPopupClosed}\n      onChange={changeTodo}\n      todo={todo}\n      />\n\t\t</div>\n\t)\n};","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoForm.tsx",[],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/TodoList.tsx",["113"],"import React, { useEffect } from \"react\";\nimport { useTypedSelector } from \"../hook/useTypesSelector\";\nimport { ITodo } from '../Interfaces';\nimport { useActions } from \"../hook/useActions\";\nimport { Preloader } from \"./common/Preloader/Preloader\";\n\ntype TodoListProps = {\n\tonToggle(todo: ITodo): void,\n\tonOpen(todo: ITodo): void,\n\tonRemove(todo: ITodo): void\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n\tonToggle,\n\tonOpen,\n\tonRemove\n}) => {\n\tconst {todos, loading, error, page, limit} = useTypedSelector(state => state.todo)\n\tconst {fetchTodos, setTodoPage} = useActions();\n\tconst pages = [1, 2, 3, 4, 5];\n\n\tuseEffect(()=>{\n\t\tfetchTodos(page, limit);\n\t}, [page])\n\n\tif (loading) {\n\t\treturn (<Preloader/>)\n\t}\n\tif (error) {\n\t\treturn <h2>{error}</h2>\n\t}\n\tif (todos.length === 0) {\n\t\treturn <p className=\"center\">Пока дел нет</p>\n\t}\n\n\tconst editHandler = (event: React.MouseEvent, todo: ITodo) => {\n\t\tevent.preventDefault();\n\t\tonOpen(todo);\n\t}\n\n\tconst removeHandler = (event: React.MouseEvent, todo: ITodo) => {\n\t\tevent.preventDefault();\n\t\tonRemove(todo);\n\t}\n\n\treturn (\n\t\t<>\n\t\t<ul>\n\t\t\t{todos.map(todo => {\n\t\t\t\tconst classes = ['todo']\n\t\t\t\tif (todo.completed) {\n\t\t\t\t\tclasses.push('completed');\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<li className={classes.join(' ')} key={todo.id}>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\t\t\t\tchecked={todo.completed}\n\t\t\t\t\t\t\t\tonChange={onToggle.bind(null, todo)}\n\t\t\t\t\t\t\t\tid=\"checkbox\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<span>{todo.title}</span>\n\t\t\t\t\t\t\t<div className=\"\">\n\t\t\t\t\t\t\t\t<i className=\"material-icons px1\"\n\t\t\t\t\t\t\t\tonClick={event => editHandler(event, todo)}\n\t\t\t\t\t\t\t\t>edit</i>\n\t\t\t\t\t\t\t\t<i className=\"material-icons red-text\" \n\t\t\t\t\t\t\t\tonClick={event => removeHandler(event, todo)}\n\t\t\t\t\t\t\t\t>delete</i>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\n\t\t\t\t\t</li>\n\t\t\t\t)\n\t\t\t})}\n\t\t</ul>\n\t\t<ul className=\"pagination row\">\n\t\t\t{pages.map(p => (\n\t\t\t\t<li\n\t\t\t\t\tclassName={`col s1 ${p === page ? \"active\" : \"waves-effect\"}`}\n\t\t\t\t\tkey={p}\n\t\t\t\t\tonClick={() => setTodoPage(p)}\t\t\t\n\t\t\t\t>{p}\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t\t</>\n\t)\n}","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/store/index.ts",[],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/store/redusers/index.ts",[],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/store/redusers/todosReducer.ts",[],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/types/todo.ts",[],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/hook/useTypesSelector.ts",[],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/store/acrtion-creators/todos.ts",[],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/hook/useActions.ts",[],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/Interfaces.ts",[],["114","115"],"/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/common/Popup/TodoPopup.tsx",["116","117"],"import React,  {useState, useEffect, useRef, ChangeEvent} from \"react\";\nimport { ITodo } from \"../../../Interfaces\";\nimport \"./TodoPopup.css\";\n\ntype TodoPopupProps = {\n\tisOpen: boolean,\n\tonChange(title: string): void,\n\tonClose: () => void,\n\ttodo: ITodo\n}\n\n\nexport const TodoPopup: React.FC<TodoPopupProps> = ({isOpen, onChange, todo, onClose}) => {\n\n\tconst [task, setTask] = useState<string>('');\n\n\tconst handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n\t\tsetTask(event.target.value);\n  };\n\n\tuseEffect(() => {\n\t\tsetTask(todo.title)\n\t}, [isOpen]);\n\n\tconst classes = ['popup'];\n\tif (isOpen) {\n\t\tclasses.push('popup_opened');\n\t};\n\n\tconst submitHandler = (event: React.MouseEvent) => {\n\t\tevent.preventDefault();\n\t\tonChange(task);\n\t\tonClose();\n\t\tsetTask('');\n\t}\n\n\treturn (\n\n\t\t<div className={classes.join(' ')}>\n\t\t\t<div className=\"popup__container\">\n\t\t\t\t<div className=\"popup__content\">\n\t\t\t\t<button className=\"popup__close\" aria-label=\"Close\" type=\"button\" onClick={onClose}/>\n\t\t\t\t<label className=\"todos\">\n\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Task...\"\n\t\t\t\t\t\t\tname=\"task\"\n\t\t\t\t\t\t\tvalue={task}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button className=\"waves-effect waves-light btn mt2\" aria-label=\"submit\" type=\"submit\" onClick={submitHandler}>Сохранить</button>\n\t\t\t\t\t\t\t\n\t\t\t\t</label>\n\n\t\t\t\t</div>\n\n\t\t\t\t\n\t\t\t</div>\n\t\t\t\n\n\t\t</div>\n\t);\n\n}","/Users/varvara/Desktop/dev/Project/Typescript_TodoList/src/components/common/Preloader/Preloader.tsx",[],{"ruleId":"118","severity":1,"message":"119","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"122","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"123","severity":1,"message":"124","line":24,"column":5,"nodeType":"125","endLine":24,"endColumn":11,"suggestions":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"118","severity":1,"message":"131","line":1,"column":38,"nodeType":"120","messageId":"121","endLine":1,"endColumn":44},{"ruleId":"123","severity":1,"message":"132","line":23,"column":5,"nodeType":"125","endLine":23,"endColumn":13,"suggestions":"133"},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchTodos' and 'limit'. Either include them or remove the dependency array.","ArrayExpression",["134"],"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'todo.title'. Either include it or remove the dependency array. If 'setTask' needs the current value of 'todo.title', you can also switch to useReducer instead of useState and read 'todo.title' in the reducer.",["137"],{"desc":"138","fix":"139"},"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [fetchTodos, limit, page]",{"range":"142","text":"143"},"Update the dependencies array to be: [isOpen, todo.title]",{"range":"144","text":"145"},[667,673],"[fetchTodos, limit, page]",[552,560],"[isOpen, todo.title]"]